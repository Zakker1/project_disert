import redis
import json
import time
import os

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Redis Cloud
r = redis.Redis(
    host='redis-10710.c340.ap-northeast-2-1.ec2.redns.redis-cloud.com',
    port=10710,
    password='M1jDnMOAOgNkOv8sw0Ca7vZtRMCL774n',
    decode_responses=True
)

print("üë∑ Python worker started. –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á...")

while True:
    task_json = r.blpop('tasks', timeout=5)
    if task_json:
        try:
            task = json.loads(task_json[1])
            task_id = task['taskId']
            image_path = task['imagePath']

            print(f"‚öôÔ∏è –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–¥–∞—á–∏ {task_id}: {image_path}")

            # –¢—É—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å Pillow, OpenCV –∏ —Ç.–ø.
            time.sleep(3)  # –∏–º–∏—Ç–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏

            r.hset(f"task:{task_id}", mapping={
                "status": "done",
                "result": f"–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ {os.path.basename(image_path)} –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ"
            })

            print(f"‚úÖ –ó–∞–¥–∞—á–∞ {task_id} –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ: {e}")
            r.hset(f"task:{task_id}", mapping={
                "status": "error",
                "result": "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ"
            })
